#include <iostream>
#include <iomanip>
#include <fstream>
#include <string>
#include <Windows.h>
#include "PHONELIST.h"
using namespace std;
void SearchByPhone();
bool LoadFileToRead();
void ReadFromFile(PhoneList *chel);
void SerchByFIO();
string name;

// функция загрузки файла
bool LoadFileToRead() {
PhoneList chel;
cout << "Введите имя файла: ";
cin >> name;
ifstream fout;
fout.open(name, ios::binary | ios::in);
if (!fout.is_open() || fout.peek() == EOF) {
cout << "Ошибка открытия файла или он пуст!" << endl;
return false;
}
else {
while (fout.peek() != EOF) {
fout.read((char*)&chel, sizeof(PhoneList));
}
cout << "Запись гуд)" << endl;
}
fout.close();
return true;
}
// функция вывода содержимого файла
void ReadFromFile() {
ifstream fout;
PhoneList chel;
fout.open(name, ios::binary | ios:: in);
cout << left << setw(8) << "Телефон" << setw(20) << "ФИО" << setw(21) << "Улица" << setw(8) <<
"Дом" << setw(10) << "Этаж" << endl <<
"_____________________________________________________________" << endl;
while(fout.peek() != EOF){
fout.read((char*)&chel, sizeof(PhoneList));
cout << left << setw(8) << chel.Phone << setw(20) << chel.FIO << setw(21) << chel.street
<< setw(10) << chel.House << setw(10) << chel.Flat << endl;
}
fout.close();
}

// функция поиска по телефону
void SearchByPhone() {
char buffNumber[7];
cout << "Введите номер для поиска: ";
cin >> buffNumber;
PhoneList chel;
ifstream fout;
fout.open(name, ios::binary);
fout.seekg(0, ios::end);
int size = fout.tellg();
size = size / sizeof(PhoneList);
fout.seekg(0, ios::beg);
int l = 0, r = size - 1, mid;
bool flag = false;
while ((l <= r) && (!flag)) {
mid = (l + r) / 2;
fout.seekg(mid * sizeof(PhoneList));
fout.read((char*)&chel, sizeof(PhoneList));
if (atoi(chel.Phone) == atoi(buffNumber)) {
flag = true;
cout << left << setw(8) << chel.Phone << setw(20) << chel.FIO << setw(21) <<
chel.street << setw(10) << chel.House << setw(10) << chel.Flat << endl;
fout.close();
return;
}
if (atoi(chel.Phone) > atoi(buffNumber)) {
r = mid - 1;
}
else {
l = mid + 1;
}
}
cout << "Try again" << endl;
ReadFromFile();
fout.close();
}


// фунция поиска по фамилии
void SearchByFIO() {
char buffStr[20];
cout << "Введите фамилию из списка: ";
cin >> buffStr;
PhoneList chel;
ifstream fout;
fout.open(name, ios::binary);
fout.seekg(0, ios::end);
int size = fout.tellg();
size = size / sizeof(PhoneList);
fout.seekg(0, ios::beg);
bool flag = false;
char surname[20];
for (int i = 0; i < size; i++) {
fout.seekg(i * sizeof(PhoneList));
fout.read((char*)&chel, sizeof(PhoneList));
string FIO(chel.FIO);
FIO = FIO.substr(0, FIO.find(' '));
strcpy_s(surname, FIO.c_str());
if (strcmp(surname, buffStr) == 0) {
flag = true;
cout << left << setw(8) << chel.Phone << setw(20) << chel.FIO << setw(21) <<
chel.street << setw(10) << chel.House << setw(10) << chel.Flat << endl;
}
}
if (!flag) {
cout << "Try again" << endl;
ReadFromFile();
}
fout.close();
}


int main() {
bool flag = true;
SetConsoleCP(1251);
SetConsoleOutputCP(1251);
while (flag) {
int a;
cout << "=========Меню=========" << endl << endl;
cout << "1: Загрузить файл" << endl;
cout << "2: Поиск по телефону" << endl;
cout << "3: Поиск по фаимилии" << endl;
cout << "4: Выйти из системы" << endl;
cout << "Ваш выбор (1-4): "; cin >> a;
switch (a) {
case 1: LoadFileToRead(); break;
case 2: SearchByPhone(); break;
case 3: SearchByFIO(); break;
case 4: flag = false; break;
case 5: ReadFromFile(); break;
default: cout << "Введите числа от 1 до 4"; break;
}
}
return 0;
}
